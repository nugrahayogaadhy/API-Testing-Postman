{
	"info": {
		"_postman_id": "ddc9e843-f229-40af-8754-21a36d6ca739",
		"name": "sekolahQA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24495292"
	},
	"item": [
		{
			"name": "Get All User Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log('request',request)\r",
							"console.log('requestHeader',responseHeaders)\r",
							"console.log('responCode',responseCode)\r",
							"var json = JSON.parse(responseBody)\r",
							"console.log('response body String', responseBody)\r",
							"\r",
							"console.log('response body JSON', json.data)\r",
							"console.log('response body JSON', json.data.id)\r",
							"console.log('response body JSON', json.data.email)\r",
							"console.log('response body JSON', json.data.first_name)\r",
							"console.log('response body JSON', json.data.last_name)\r",
							"\r",
							"//check response code\r",
							"tests[\"Response code must 200\"] = responseCode.code === 200\r",
							"\r",
							"//check type data\r",
							"tests[\"data type is object\"] = typeof(json.data) === \"object\"\r",
							"tests[\"id in data type is number\"] = typeof(json.data.id) === \"number\"\r",
							"tests[\"email in data type is string\"] = typeof(json.data.email) === \"string\"\r",
							"tests[\"first_name in data type is string\"] = typeof(json.data.first_name) === \"string\"\r",
							"tests[\"last_name in data type is string\"] = typeof(json.data.last_name) === \"string\"\r",
							"\r",
							"//check success request\r",
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code) == 200;\r",
							"});\r",
							"\r",
							"//check response time\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"//check value data\r",
							"tests[\"id must 2\"] = json.data.id == 2\r",
							"tests[\"email must janet.weaver@reqres.in\"] = json.data.email == \"janet.weaver@reqres.in\"\r",
							"tests[\"first_name must Janet\"] = json.data.first_name == \"Janet\"\r",
							"tests[\"last_name must Weaver\"] = json.data.last_name == \"Weaver\""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Username & Job",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// {\r",
							"//     \"Name\": \"Aphelios\",\r",
							"//     \"Job\": \"Marksman\"\r",
							"// }\r",
							"\r",
							"console.log('request',request)\r",
							"console.log('requestHeader',responseHeaders)\r",
							"console.log('responCode',responseCode)\r",
							"var json = JSON.parse(responseBody)\r",
							"console.log('response body String', responseBody)\r",
							"console.log('response body JSON', json.Name)\r",
							"console.log('response body JSON', json.Job)\r",
							"//check value\r",
							"tests[\"Name must Aphelios\"] = json.Name == \"Aphelios\"\r",
							"tests[\"Job must Marksman\"] = json.Job == \"Marksman\"\r",
							"//check respone code\r",
							"tests[\"Response code must 201\"] = responseCode.code === 201\r",
							"//check type data\r",
							"tests[\"Name is string\"] = typeof(json.Name) === \"string\"\r",
							"tests[\"Job is string\"] = typeof(json.Job) === \"string\";\r",
							"\r",
							"pm.test('Has Name data', function() {\r",
							"  pm.expect(json).to.have.property('Name');\r",
							"});\r",
							"pm.test('Has Job data', function() {\r",
							"  pm.expect(json).to.have.property('Job');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Name\": \"Aphelios\",\r\n    \"Job\": \"Marksman\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put User Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log('request',request)\r",
							"console.log('requestHeader',responseHeaders)\r",
							"console.log('responCode',responseCode)\r",
							"var json = JSON.parse(responseBody)\r",
							"console.log('response body String', responseBody)\r",
							"console.log('response body JSON', json.name)\r",
							"console.log('response body JSON', json.job)\r",
							"\r",
							"//check response code\r",
							"pm.test(\"Response code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//check value\r",
							"tests[\"name must athena\"] = json.name == \"athena\"\r",
							"tests[\"job must jobless\"] = json.job == \"jobless\"\r",
							"\r",
							"//check data type\r",
							"tests[\"name is string\"] = typeof(json.name) == \"string\"\r",
							"tests[\"job is string\"] = typeof(json.job) == \"string\"\r",
							"\r",
							"//check data is available\r",
							"pm.test('Has name data', function() {\r",
							"  pm.expect(json).to.have.property('name');\r",
							"});\r",
							"pm.test('Has job data', function() {\r",
							"  pm.expect(json).to.have.property('job');\r",
							"});\r",
							"\r",
							"//successfull PUT request\r",
							"pm.test(\"Successful PUT request\", function () {\r",
							"    pm.expect(pm.response.code) == 200;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"athena\",\r\n    \"job\": \"jobless\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/3",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//DEL req success\r",
							"pm.test(\"Successful DELETE request\", function () {\r",
							"    pm.expect(pm.response.code) == 204;\r",
							"});\r",
							"\r",
							"//response time less than 1s\r",
							"pm.test(\"Response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Array User Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = JSON.parse(responseBody)\r",
							"console.log('response body String', responseBody)\r",
							"\r",
							"console.log('response body JSON', json.data[1].email)\r",
							"tests[\"email data 2 must lindsay.ferguson@reqres.in\"] = json.data[1].email == \"lindsay.ferguson@reqres.in\"\r",
							"console.log('response body', json.ad)\r",
							"tests[\"url ad must http://statuscode.org/\"] = json.ad.url == \"http://statuscode.org/\"\r",
							"console.log('response body JSON', json.data[4].last_name)\r",
							"tests['last name in data 5 must Edward'] = json.data[4].last_name == \"Edwards\""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		}
	]
}